#!/bin/sh
# Copyright 2024 Stan Grishin <stangri@melmac.ca>
# Licensed to the public under the Apache License 2.0.

# shellcheck disable=SC1091,SC3003,SC3043
# ubus call network.interface.netmaker status

# https://github.com/openwrt/openwrt/blob/494c5691c60316aa710fbf5a6d38bdb04ff14f76/package/network/services/unetd/files/unetd.sh
# https://github.com/openwrt/openwrt/blob/494c5691c60316aa710fbf5a6d38bdb04ff14f76/package/network/utils/wireguard-tools/files/wireguard.sh#L26

# shellcheck disable=SC2034
readonly PKG_VERSION='dev-test'
readonly PROG='/usr/bin/netclient'
readonly IP='/sbin/ip'
readonly WG='/usr/bin/wg'

[ -x "$PROG" ] || exit 0
[ -x "$IP" ] || exit 0
[ -x "$WG" ] || exit 0

. /lib/functions.sh
. /lib/functions/network.sh
. ../netifd-proto.sh

init_proto "$@"

netclient_init_config() {
#	proto_config_add_string key
	proto_config_add_string 'device'
}

proto_netclient_setup() {
	local config="$1"
	local interface="$2"
	local device key
	local addresses address port

	json_get_vars device key
	device="${device:-$interface}"
	device="${device:-$config}"
	device="${device:-netmaker}"

	logger -t 'netclient' "Setting up $interface :: $config :: $device"

	"$IP" link del dev "$device" >/dev/null 2>&1
	"$IP" link add dev "$device" type wireguard || {
		echo "Failed to create wireguard device ($interface :: $config :: $device)"
		proto_setup_failed "$config"
		exit 1
	}

	proto_init_update  "$config" 1
#	proto_run_command "$config" "$PROG" daemon

	"$WG" show "$config" >/dev/null 2>&1 || {
		sleep 5
		logger -t 'netclient' "Failed to set up ($interface :: $config :: $device)"
		proto_setup_failed "$config"
		exit 1
	}

	addresses="$("$IP" route list dev "$device" | awk '{print $NF}')"
	for address in ${addresses}; do
		case "${address}" in
			*:*/*)
				proto_add_ipv6_address "${address%%/*}" "${address##*/}"
				;;
			*.*/*)
				proto_add_ipv4_address "${address%%/*}" "${address##*/}"
				;;
			*:*)
				proto_add_ipv6_address "${address%%/*}" "128"
				;;
			*.*)
				proto_add_ipv4_address "${address%%/*}" "32"
				;;
		esac
	done

# shellcheck disable=SC2034
	"$WG" show "$config" endpoints | \
	sed -E 's/\[?([0-9.:a-f]+)\]?:([0-9]+)/\1 \2/' | \
	while IFS=$'\t ' read -r key address port; do
		[ -n "$port" ] || continue
		proto_add_host_dependency "$config" "$address"
	done

	proto_send_update "$config"

#	json_init
#	json_add_string name "$device"
#	json_add_string key "$key"
#	ubus call netclient network_add "$(json_dump)"
}

proto_netclient_teardown() {
	local config="$1"
	local interface="$2"
	local device key

	json_get_vars device key
	device="${device:-$interface}"
	device="${device:-$config}"
	device="${device:-netmaker}"

	logger -t 'netclient' "Tearing down $interface :: $config :: $device"
	proto_kill_command "$interface"

	"$IP" link del dev "$device"

#	json_init
#	json_add_string name "$device"
#	json_add_string key "$key"
#	ubus call netclient network_del "$(json_dump)"
}

add_protocol netclient
